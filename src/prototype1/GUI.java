/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package prototype1;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import spike.fileTest.fileOpenerTest;
/**

 @author martinale
 */


public class GUI extends javax.swing.JFrame
{
   File file;
   FileReader fileReader;
   BufferedReader bufferedReader;
   FileWriter fileWriter;
   BufferedWriter bufferedWriter;
   /**
    Creates new form GUI
    */
   public GUI()
   {
      initComponents();
      WarningLabel.setVisible(false);
      setResizable(false);
<<<<<<< HEAD
      fileChoose.addChoosableFileFilter(new FHKFilter());
      fileChoose.setAcceptAllFileFilterUsed(false);
      
=======
      SetupComboBox();
>>>>>>> refs/remotes/origin/master
   }

   /**
    This method is called from within the constructor to initialize the form.
    WARNING: Do NOT modify this code. The content of this method is always
    regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {

      jMenu1 = new javax.swing.JMenu();
      jScrollPane2 = new javax.swing.JScrollPane();
      jList2 = new javax.swing.JList();
      list1 = new java.awt.List();
      jPopupMenu1 = new javax.swing.JPopupMenu();
      jScrollPane1 = new javax.swing.JScrollPane();
      fileChoose = new javax.swing.JFileChooser();
      SampleNumberInput = new java.awt.TextField();
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      EndYearInput = new java.awt.TextField();
      jScrollPane3 = new javax.swing.JScrollPane();
      InfoTable = new javax.swing.JTable();
      jLabel4 = new javax.swing.JLabel();
      jLabel5 = new javax.swing.JLabel();
      StartYearInput = new java.awt.TextField();
      jToggleButton1 = new javax.swing.JToggleButton();
      jScrollPane4 = new javax.swing.JScrollPane();
      SampleTable = new javax.swing.JTable();
      WarningLabel = new javax.swing.JLabel();
      jToggleButton2 = new javax.swing.JToggleButton();
      jMenuBar1 = new javax.swing.JMenuBar();
      jMenu2 = new javax.swing.JMenu();
      newFileOption = new javax.swing.JMenuItem();
      loadFileOption = new javax.swing.JMenuItem();
      saveFileOption = new javax.swing.JMenuItem();
      saveFileAsOption = new javax.swing.JMenuItem();
      exitOption = new javax.swing.JMenuItem();

      jMenu1.setText("jMenu1");

      jList2.setModel(new javax.swing.AbstractListModel()
      {
         String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
         public int getSize() { return strings.length; }
         public Object getElementAt(int i) { return strings[i]; }
      });
      jScrollPane2.setViewportView(jList2);

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

      SampleNumberInput.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            SampleNumberInputActionPerformed(evt);
         }
      });
      getContentPane().add(SampleNumberInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 24, 92, -1));

      jLabel1.setText("Ending Year");
      getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 127, -1, -1));

      jLabel2.setText("Starting Year");
      getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 127, -1, -1));

      EndYearInput.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            EndYearInputActionPerformed(evt);
         }
      });
      getContentPane().add(EndYearInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 57, -1));

      jScrollPane3.setName(""); // NOI18N

      InfoTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][]
         {

         },
         new String []
         {
            "Year", "Event ", "New Event "
         }
      ));
      jScrollPane3.setViewportView(InfoTable);

      getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 54, 497, 472));

      jLabel4.setText("Sample Information");
      getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 30, -1, -1));

      jLabel5.setText("Number of Samples");
      getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

      StartYearInput.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            StartYearInputActionPerformed(evt);
         }
      });
      getContentPane().add(StartYearInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 57, -1));

      jToggleButton1.setText("Set Up ");
      jToggleButton1.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jToggleButton1ActionPerformed(evt);
         }
      });
      getContentPane().add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 530, -1, -1));

      SampleTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][]
         {

         },
         new String []
         {
            "Sample Name"
         }
      ));
      jScrollPane4.setViewportView(SampleTable);

      getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 181, 223, 346));

      WarningLabel.setText("ERROR");
      WarningLabel.setEnabled(false);
      getContentPane().add(WarningLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

      jToggleButton2.setText("Save Changes");
      jToggleButton2.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jToggleButton2ActionPerformed(evt);
         }
      });
      getContentPane().add(jToggleButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 530, -1, -1));

      jMenu2.setText("File");

      newFileOption.setText("New File");
      newFileOption.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            newFileOptionActionPerformed(evt);
         }
      });
      jMenu2.add(newFileOption);

      loadFileOption.setText("Load File");
      loadFileOption.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            loadFileOptionActionPerformed(evt);
         }
      });
      jMenu2.add(loadFileOption);

      saveFileOption.setText("Save File");
      saveFileOption.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            saveFileOptionActionPerformed(evt);
         }
      });
      jMenu2.add(saveFileOption);

      saveFileAsOption.setText("Save File As");
      saveFileAsOption.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            saveFileAsOptionActionPerformed(evt);
         }
      });
      jMenu2.add(saveFileAsOption);

      exitOption.setText("Exit");
      exitOption.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            exitOptionActionPerformed(evt);
         }
      });
      jMenu2.add(exitOption);

      jMenuBar1.add(jMenu2);

      setJMenuBar(jMenuBar1);

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void SampleNumberInputActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_SampleNumberInputActionPerformed
   {//GEN-HEADEREND:event_SampleNumberInputActionPerformed
      
   }//GEN-LAST:event_SampleNumberInputActionPerformed

   private void EndYearInputActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_EndYearInputActionPerformed
   {//GEN-HEADEREND:event_EndYearInputActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_EndYearInputActionPerformed

   private void StartYearInputActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_StartYearInputActionPerformed
   {//GEN-HEADEREND:event_StartYearInputActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_StartYearInputActionPerformed

   private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jToggleButton1ActionPerformed
   {//GEN-HEADEREND:event_jToggleButton1ActionPerformed
      // TODO add your handling code here:
      int Start, End, SampleNum;
      WarningLabel.setVisible(false);
      if(!SampleNumberInput.getText().isEmpty() && 
         !StartYearInput.getText().isEmpty() && 
         !EndYearInput.getText().isEmpty())
      {
         if(SampleNumberInput.getText().matches("^-?\\d+$") && 
            EndYearInput.getText().matches("^-?\\d+$") && 
            StartYearInput.getText().matches("^-?\\d+$") && 
            Integer.parseInt(StartYearInput.getText()) > 0 &&
            Integer.parseInt(EndYearInput.getText()) > 0 &&
            Integer.parseInt(SampleNumberInput.getText()) > 0)      
         {   
            Start = Integer.parseInt(StartYearInput.getText());
            End = Integer.parseInt(EndYearInput.getText());
            SampleNum = Integer.parseInt(SampleNumberInput.getText());  
            DefaultTableModel dtm = (DefaultTableModel) InfoTable.getModel();
            DefaultTableModel dtm2 = (DefaultTableModel) SampleTable.getModel();
            if((End - Start) >= 0 )
            {   
              dtm.setRowCount((End - Start) + 1 );
            }  
            else 
            {
              WarningLabel.setVisible(true);
              WarningLabel.setText("Cannot have starting year before ending year.");
            }
            InfoTable.setModel(dtm);
            dtm2.setRowCount(SampleNum);
            SampleTable.setModel(dtm2);
            for (int x = 1; x <= SampleNum; x++)
            {
               String SampleId = "Tree " + x;
               SampleTable.setValueAt(SampleId, x - 1, 0);
            }
            for (int x = Start; x <= End; x++)
            {
               InfoTable.setValueAt(x, x - Start, 0);
               InfoTable.setValueAt('.', x - Start, 1);
            }
         }
         else 
         {
            WarningLabel.setText("Please enter valid inputs.");
            WarningLabel.setVisible(true); 
         }
      }
   }//GEN-LAST:event_jToggleButton1ActionPerformed

   private void exitOptionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitOptionActionPerformed
   {//GEN-HEADEREND:event_exitOptionActionPerformed
      System.exit(0);
   }//GEN-LAST:event_exitOptionActionPerformed

   private void newFileOptionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_newFileOptionActionPerformed
   {//GEN-HEADEREND:event_newFileOptionActionPerformed
      int returnVal = fileChoose.showSaveDialog(GUI.this);
      if(returnVal == JFileChooser.APPROVE_OPTION)
      {
         file = fileChoose.getSelectedFile(); //this will save the .FHX file path?
         String file_name = file.toString();
         if(!file_name.endsWith(".FHX"))
            file_name += ".FHX";
         file = new File(file_name);
         if(!file.exists())
         {
            try {
               file.createNewFile();//create the file in the folder selected
         }
         catch (IOException ex) {
            System.out.println("Oops");
         }
         }
         else
            System.out.println("It exsists");//tell user the file exsits
      }   
   }//GEN-LAST:event_newFileOptionActionPerformed

   private void loadFileOptionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loadFileOptionActionPerformed
   {//GEN-HEADEREND:event_loadFileOptionActionPerformed
      int returnVal = fileChoose.showOpenDialog(GUI.this);
      
      if(returnVal == JFileChooser.APPROVE_OPTION)
      {
         file = fileChoose.getSelectedFile();  //this will load the .FHX file
         load(file);//load the table based on the file
      }
   }//GEN-LAST:event_loadFileOptionActionPerformed

   private void saveFileOptionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveFileOptionActionPerformed
   {//GEN-HEADEREND:event_saveFileOptionActionPerformed
        //saves changes to the .FHX file based on the table
       if (file != null)
         save(file);//not sure if this is good
   }//GEN-LAST:event_saveFileOptionActionPerformed

<<<<<<< HEAD
   private void saveFileAsOptionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveFileAsOptionActionPerformed
   {//GEN-HEADEREND:event_saveFileAsOptionActionPerformed
      newFileOptionActionPerformed(evt);
      saveFileOptionActionPerformed(evt);
   }//GEN-LAST:event_saveFileAsOptionActionPerformed
=======
   private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jToggleButton2ActionPerformed
   {//GEN-HEADEREND:event_jToggleButton2ActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_jToggleButton2ActionPerformed
>>>>>>> refs/remotes/origin/master
   
   private void load(File f)
   {
      
   }
   
   private void save(File f)
   {
      
   }
   void SetupComboBox()
   {
      TableColumn  NewColumn = InfoTable.getColumnModel().getColumn(2);
      TableColumn  SavedColumn = InfoTable.getColumnModel().getColumn(1);
      JComboBox comboBox = new JComboBox();
      comboBox.addItem("{");
      comboBox.addItem("}");
      comboBox.addItem("[");
      comboBox.addItem("]");
      comboBox.addItem("|"); 
      comboBox.addItem(".");
      comboBox.addItem("D");
      comboBox.addItem("d");
      comboBox.addItem("M");
      comboBox.addItem("m");      
      comboBox.addItem("U");    
      comboBox.addItem("u");  
      comboBox.addItem("E"); 
      comboBox.addItem("e");
      comboBox.addItem("L");
      comboBox.addItem("l");      
      comboBox.addItem("A");
      comboBox.addItem("a");      
      NewColumn.setCellEditor(new DefaultCellEditor(comboBox));
      DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
      NewColumn.setCellRenderer(renderer);
      SavedColumn.setCellEditor(new DefaultCellEditor(comboBox));
      SavedColumn.setCellRenderer(renderer);
   };

   /**
    @param args the command line arguments
    */
   public static void main(String args[])
   {
      /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try
      {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
         {
            if ("Nimbus".equals(info.getName()))
            {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      }
      catch (ClassNotFoundException ex)
      {
         java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      catch (InstantiationException ex)
      {
         java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      catch (IllegalAccessException ex)
      {
         java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      catch (javax.swing.UnsupportedLookAndFeelException ex)
      {
         java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
        //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable()
      {
         public void run()
         {
            new GUI().setVisible(true);
         }
      });
      
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private java.awt.TextField EndYearInput;
   private javax.swing.JTable InfoTable;
   private java.awt.TextField SampleNumberInput;
   private javax.swing.JTable SampleTable;
   private java.awt.TextField StartYearInput;
   private javax.swing.JLabel WarningLabel;
   private javax.swing.JMenuItem exitOption;
   private javax.swing.JFileChooser fileChoose;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JLabel jLabel5;
   private javax.swing.JList jList2;
   private javax.swing.JMenu jMenu1;
   private javax.swing.JMenu jMenu2;
   private javax.swing.JMenuBar jMenuBar1;
   private javax.swing.JPopupMenu jPopupMenu1;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JScrollPane jScrollPane3;
   private javax.swing.JScrollPane jScrollPane4;
   private javax.swing.JToggleButton jToggleButton1;
   private javax.swing.JToggleButton jToggleButton2;
   private java.awt.List list1;
   private javax.swing.JMenuItem loadFileOption;
   private javax.swing.JMenuItem newFileOption;
   private javax.swing.JMenuItem saveFileAsOption;
   private javax.swing.JMenuItem saveFileOption;
   // End of variables declaration//GEN-END:variables
}
